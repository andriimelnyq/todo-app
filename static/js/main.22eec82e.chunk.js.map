{"version":3,"sources":["utils/fetchClient.ts","types/Errors.ts","api/todos.ts","api/users.ts","components/Auth/RegisterField.tsx","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Header/Header.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/Filter/Filter.tsx","components/Footer/Footer.tsx","components/ErrorNotification/ErrorNotification.tsx","components/TodoApp/TodoApp.tsx","utils/useTodos.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["BASE_URL","request","url","delay","data","arguments","length","undefined","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","Errors","client","deleteTodo","todoId","concat","patchTodo","updatedValue","getUserByEmail","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","users","wrap","_context","prev","next","sent","abrupt","stop","_x","apply","createUser","_ref3","_callee2","_ref2","name","_context2","_x2","RegisterField","React","memo","loading","needToRegister","errorMessage","setEmail","setName","_jsxs","_Fragment","children","className","_jsx","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthForm","onLogin","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","setNeedToRegister","_useState7","_useState8","setLoading","_useState9","_useState10","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","t0","finish","onSubmit","AuthContext","createContext","AuthProvider","setUser","Provider","Header","todosFromServer","newTodoTitle","setNewTodoTitle","createTodo","toggleAllTodos","setAppliedNewTodoTitle","activeTodosCount","isAdding","newTodoField","useRef","applyNewTodoTitle","useCallback","debounce","current","focus","active","hidden","onClick","ref","TodoItem","todo","removeTodo","toggleTodo","updateTodoTitle","todoIdsForLoader","title","todoTitle","setTodoTitle","isEditing","setIsEditing","newTodoTitleField","completed","onDoubleClick","onBlur","onKeyDown","key","includes","TodoList","todos","TransitionGroup","map","CSSTransition","timeout","userId","PageNavLink","to","text","NavLink","end","isActive","selected","Filter","Footer","clearCompletedTodos","completedTodosCount","ErrorNotification","setError","NONE","TodoApp","useContext","appliedNewTodoTitle","status","useParams","_useTodos","setTodosFromServer","setIsAdding","setTodoIdsForLoader","loadTodos","LOAD","trim","ADD","_callee3","activeTodosIds","todosIds","_context3","filter","all","UPDATE","_callee4","completedTodosIds","_context4","DELETE_COMPLETED","_ref5","_callee5","_context5","DELETE","_ref6","_callee6","_context6","_x3","_ref7","_callee7","_context7","_x4","_x5","useTodos","useMemo","reduce","acc","NotFoundPage","App","location","useLocation","pathname","checkStatus","Routes","Route","path","element","Root","HashRouter","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.22eec82e.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum Errors {\n  ADD = 'Unable to add a todo',\n  DELETE = 'Unable to delete a todo',\n  DELETE_COMPLETED = 'Unable to delete completed todos',\n  UPDATE = 'Unable to update a todo',\n  LOAD = 'Unable to load a todo',\n  NONE = '',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const postTodo = (userId: number, title: string) => {\n  return client.post('/todos', {\n    userId,\n    title,\n    completed: false,\n  });\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n\nexport const patchTodo = (\n  todoId: number, updatedValue: { completed: boolean } | { title: string },\n) => {\n  return client.patch(`/todos/${todoId}`, updatedValue);\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  loading: boolean,\n  needToRegister: boolean,\n  errorMessage: string,\n  email: string,\n  name: string,\n  setEmail: (email: string) => void,\n  setName: (name: string) => void,\n};\n\nexport const RegisterField: React.FC<Props> = React.memo(\n  ({\n    loading,\n    needToRegister,\n    errorMessage,\n    email,\n    name,\n    setEmail,\n    setName,\n  }) => {\n    const handleChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => (\n      setEmail(e.target.value)\n    );\n\n    const handleChangeName = (e: React.ChangeEvent<HTMLInputElement>) => (\n      setName(e.target.value)\n    );\n\n    return (\n      <>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-email\">\n            Email\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"email\"\n              id=\"user-email\"\n              className={classNames('input', {\n                'is-danger': !needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your email\"\n              disabled={loading || needToRegister}\n              value={email}\n              required\n              onChange={handleChangeEmail}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-envelope\" />\n            </span>\n          </div>\n\n          {!needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n\n        {needToRegister && (\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"user-name\">\n              Your Name\n            </label>\n\n            <div\n              className={classNames('control has-icons-left', {\n                'is-loading': loading,\n              })}\n            >\n              <input\n                type=\"text\"\n                id=\"user-name\"\n                className={classNames('input', {\n                  'is-danger': needToRegister && errorMessage,\n                })}\n                placeholder=\"Enter your name\"\n                required\n                minLength={4}\n                disabled={loading}\n                value={name}\n                onChange={handleChangeName}\n              />\n\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\" />\n              </span>\n            </div>\n\n            {needToRegister && errorMessage && (\n              <p className=\"help is-danger\">{errorMessage}</p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  },\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\nimport { RegisterField } from './RegisterField';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      setErrorMessage('Need to login!');\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <RegisterField\n        loading={loading}\n        needToRegister={needToRegister}\n        errorMessage={errorMessage}\n        email={email}\n        name={name}\n        setEmail={setEmail}\n        setName={setName}\n      />\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import classNames from 'classnames';\nimport { debounce } from 'lodash';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todosFromServer: Todo[],\n  newTodoTitle: string,\n  setNewTodoTitle: (title: string) => void,\n  createTodo: (e: React.FormEvent<HTMLFormElement>) => void,\n  toggleAllTodos: () => void,\n  setAppliedNewTodoTitle: (title: string) => void,\n  activeTodosCount: number,\n  isAdding: boolean,\n};\n\nexport const Header: React.FC<Props> = ({\n  todosFromServer,\n  newTodoTitle,\n  setNewTodoTitle,\n  createTodo,\n  toggleAllTodos,\n  setAppliedNewTodoTitle,\n  activeTodosCount,\n  isAdding,\n}) => {\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  const applyNewTodoTitle = useCallback(\n    debounce(setAppliedNewTodoTitle, 1000),\n    [],\n  );\n\n  const handleChangeNewTodoField = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodoTitle(e.target.value);\n    applyNewTodoTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, [todosFromServer]);\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        data-cy=\"ToggleAllButton\"\n        type=\"button\"\n        aria-label=\"Toggle all button\"\n        className={classNames(\n          'todoapp__toggle-all',\n          { active: activeTodosCount === 0 },\n          { hidden: todosFromServer.length === 0 },\n        )}\n        onClick={toggleAllTodos}\n      />\n\n      <form onSubmit={createTodo}>\n        <input\n          data-cy=\"NewTodoField\"\n          type=\"text\"\n          ref={newTodoField}\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodoTitle}\n          disabled={isAdding}\n          onChange={handleChangeNewTodoField}\n        />\n      </form>\n    </header>\n  );\n};\n","import React, {\n  useEffect, useRef, useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  isAdding: boolean,\n  removeTodo: (id: number) => void,\n  toggleTodo: (todo: Todo) => void,\n  updateTodoTitle: (todoTitle: string, todo: Todo) => void,\n  todoIdsForLoader: number[],\n};\n\nexport const TodoItem = React.memo(\n  ({\n    todo,\n    isAdding,\n    removeTodo,\n    toggleTodo,\n    updateTodoTitle,\n    todoIdsForLoader,\n  }: Props) => {\n    const [todoTitle, setTodoTitle] = useState(todo.title);\n    const [isEditing, setIsEditing] = useState(false);\n    const newTodoTitleField = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n      if (newTodoTitleField.current) {\n        newTodoTitleField.current.focus();\n      }\n    });\n\n    const handleSubmitUpdate = (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      switch (todoTitle) {\n        case '':\n          removeTodo(todo.id);\n\n          return;\n        case todo.title:\n          setIsEditing(false);\n\n          return;\n        default:\n          break;\n      }\n\n      updateTodoTitle(todoTitle, todo);\n      setIsEditing(false);\n    };\n\n    const handleChangeTodoStatus = () => toggleTodo(todo);\n    const handleDblClickTodo = () => setIsEditing(true);\n    const handleClickRemoveTodo = () => removeTodo(todo.id);\n    const handleChangeTodoTitle = (e: React.ChangeEvent<HTMLInputElement>) => (\n      setTodoTitle(e.target.value)\n    );\n    const handleBlurTodoTitle = () => updateTodoTitle(todoTitle, todo);\n    const handleKeyDownEscape = (e: React.KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        setIsEditing(false);\n        setTodoTitle(todo.title);\n      }\n    };\n\n    return (\n      <div\n        data-cy=\"Todo\"\n        className={todo.completed ? 'todo completed' : 'todo'}\n        key={todo.id}\n      >\n        <label className=\"todo__status-label\">\n          <input\n            data-cy=\"TodoStatus\"\n            type=\"checkbox\"\n            className=\"todo__status\"\n            onChange={handleChangeTodoStatus}\n          />\n        </label>\n\n        <span\n          data-cy=\"TodoTitle\"\n          className={classNames(\n            'todo__title',\n            { hidden: isEditing },\n          )}\n          onDoubleClick={handleDblClickTodo}\n        >\n          {todoTitle}\n        </span>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'todo__remove',\n            { hidden: isEditing },\n          )}\n          data-cy=\"TodoDeleteButton\"\n          onClick={handleClickRemoveTodo}\n        >\n          ×\n        </button>\n\n        <form\n          onSubmit={handleSubmitUpdate}\n        >\n          <input\n            data-cy=\"TodoTitleField\"\n            type=\"text\"\n            className={classNames(\n              'todo__title-field',\n              { hidden: !isEditing },\n            )}\n            placeholder=\"Empty todo will be deleted\"\n            value={todoTitle}\n            ref={newTodoTitleField}\n            onChange={handleChangeTodoTitle}\n            onBlur={handleBlurTodoTitle}\n            onKeyDown={handleKeyDownEscape}\n          />\n        </form>\n\n        <div\n          data-cy=\"TodoLoader\"\n          className={\n            classNames(\n              'modal',\n              'overlay',\n              {\n                'is-active': isAdding || todoIdsForLoader.includes(todo.id),\n              },\n            )\n          }\n        >\n          <div className=\"modal-background has-background-white-ter\" />\n          <div className=\"loader\" />\n        </div>\n      </div>\n    );\n  },\n);\n","import {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  isAdding: boolean,\n  newTodoTitle: string,\n  removeTodo: (id: number) => void,\n  toggleTodo: (todo: Todo) => void,\n  updateTodoTitle: (todoTitle: string, todo: Todo) => void,\n  todoIdsForLoader: number[],\n};\n\nexport const TodoList = React.memo(\n  ({\n    todos,\n    isAdding,\n    newTodoTitle,\n    removeTodo,\n    toggleTodo,\n    updateTodoTitle,\n    todoIdsForLoader,\n  }: Props) => {\n    return (\n      <section className=\"todoapp__main\" data-cy=\"TodoList\">\n        <TransitionGroup>\n          {todos.map(todo => (\n            <CSSTransition\n              key={todo.id}\n              timeout={300}\n              classNames=\"item\"\n            >\n              <TodoItem\n                todo={todo}\n                isAdding={false}\n                removeTodo={removeTodo}\n                toggleTodo={toggleTodo}\n                updateTodoTitle={updateTodoTitle}\n                todoIdsForLoader={todoIdsForLoader}\n              />\n            </CSSTransition>\n          ))}\n          {isAdding && (\n            <CSSTransition\n              key={0}\n              timeout={300}\n              classNames=\"item\"\n            >\n              <TodoItem\n                todo={{\n                  id: 0,\n                  userId: 0,\n                  title: newTodoTitle,\n                  completed: false,\n                }}\n                isAdding={isAdding}\n                removeTodo={removeTodo}\n                toggleTodo={toggleTodo}\n                updateTodoTitle={updateTodoTitle}\n                todoIdsForLoader={todoIdsForLoader}\n              />\n            </CSSTransition>\n          )}\n        </TransitionGroup>\n\n      </section>\n    );\n  },\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    data-cy=\"FilterLinkAll\"\n    end\n    to={to}\n    className={({ isActive }) => classNames('filter__link', {\n      selected: isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n\nexport const Filter: React.FC = () => (\n  <nav className=\"filter\" data-cy=\"Filter\">\n\n    <PageNavLink to=\"/\" text=\"All\" />\n\n    <PageNavLink to=\"/active\" text=\"Active\" />\n\n    <PageNavLink to=\"/completed\" text=\"Completed\" />\n  </nav>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Filter } from '../Filter';\n\ntype Props = {\n  activeTodosCount: number,\n  clearCompletedTodos: () => void,\n  todosFromServer: Todo[],\n};\n\nexport const Footer: React.FC<Props> = React.memo(\n  ({\n    todosFromServer,\n    activeTodosCount,\n    clearCompletedTodos,\n  }) => {\n    const completedTodosCount = todosFromServer.length - activeTodosCount;\n\n    return (\n      <footer\n        className={classNames(\n          'todoapp__footer',\n          { hidden: todosFromServer.length === 0 },\n        )}\n        data-cy=\"Footer\"\n      >\n        <span className=\"todo-count\" data-cy=\"todosCounter\">\n          {`${activeTodosCount} items left`}\n        </span>\n\n        <Filter />\n\n        <button\n          data-cy=\"ClearCompletedButton\"\n          type=\"button\"\n          className={classNames(\n            'todoapp__clear-completed',\n            { hidden: completedTodosCount === 0 },\n          )}\n          onClick={clearCompletedTodos}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  },\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Errors } from '../../types/Errors';\n\ntype Props = {\n  error: Errors,\n  setError: (error: Errors) => void,\n};\n\nexport const ErrorNotification: React.FC<Props> = React.memo(\n  ({ error, setError }) => {\n    const handleDeleteError = () => setError(Errors.NONE);\n\n    setTimeout(() => setError(Errors.NONE), 3000);\n\n    return (\n      <div\n        data-cy=\"ErrorNotification\"\n        className={\n          classNames(\n            'notification',\n            'is-danger',\n            'is-light',\n            'has-text-weight-normal',\n            { hidden: error === Errors.NONE },\n          )\n        }\n      >\n        <button\n          aria-label=\"Delete error\"\n          data-cy=\"HideErrorButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={handleDeleteError}\n        />\n\n        {error}\n      </div>\n    );\n  },\n);\n","import React, {\n  useContext, useEffect, useMemo, useState,\n} from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTodos } from '../../utils/useTodos';\nimport { AuthContext } from '../Auth/AuthContext';\n\nimport { Header } from '../Header';\nimport { TodoList } from '../TodoList';\nimport { Footer } from '../Footer';\nimport { ErrorNotification } from '../ErrorNotification';\n\nexport const TodoApp: React.FC = React.memo(\n  () => {\n    const user = useContext(AuthContext);\n    const [appliedNewTodoTitle, setAppliedNewTodoTitle] = useState('');\n    const { status } = useParams();\n\n    const {\n      error,\n      setError,\n      todosFromServer,\n      newTodoTitle,\n      setNewTodoTitle,\n      isAdding,\n      loadTodos,\n      createTodo,\n      toggleAllTodos,\n      clearCompletedTodos,\n      removeTodo,\n      toggleTodo,\n      updateTodoTitle,\n      todoIdsForLoader,\n    } = useTodos();\n\n    useEffect(() => {\n      loadTodos();\n    }, [user]);\n\n    const todos = useMemo(() => (\n      todosFromServer.filter(todo => {\n        switch (status) {\n          case 'completed':\n            return todo.completed;\n\n          case 'active':\n            return !todo.completed;\n          default:\n            return todo;\n        }\n      })\n    ), [todosFromServer, status]);\n\n    const activeTodosCount = todosFromServer.reduce(\n      (acc, todo) => (!todo.completed ? 1 : 0) + acc, 0,\n    );\n\n    return (\n      <div className=\"todoapp\">\n        <h1 className=\"todoapp__title\">todos</h1>\n\n        <div className=\"todoapp__content\">\n          <Header\n            todosFromServer={todosFromServer}\n            newTodoTitle={newTodoTitle}\n            setNewTodoTitle={setNewTodoTitle}\n            createTodo={createTodo}\n            toggleAllTodos={toggleAllTodos}\n            setAppliedNewTodoTitle={setAppliedNewTodoTitle}\n            activeTodosCount={activeTodosCount}\n            isAdding={isAdding}\n          />\n\n          <TodoList\n            todos={todos}\n            isAdding={isAdding}\n            newTodoTitle={appliedNewTodoTitle}\n            removeTodo={removeTodo}\n            toggleTodo={toggleTodo}\n            updateTodoTitle={updateTodoTitle}\n            todoIdsForLoader={todoIdsForLoader}\n          />\n\n          <Footer\n            todosFromServer={todosFromServer}\n            activeTodosCount={activeTodosCount}\n            clearCompletedTodos={clearCompletedTodos}\n          />\n        </div>\n\n        <ErrorNotification\n          error={error}\n          setError={setError}\n        />\n      </div>\n    );\n  },\n);\n","import { useState, useContext, useCallback } from 'react';\nimport {\n  getTodos, postTodo, deleteTodo, patchTodo,\n} from '../api/todos';\nimport { Errors } from '../types/Errors';\nimport { AuthContext } from '../components/Auth/AuthContext';\nimport { Todo } from '../types/Todo';\n\nexport const useTodos = () => {\n  const user = useContext(AuthContext);\n  const [error, setError] = useState(Errors.NONE);\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [isAdding, setIsAdding] = useState(false);\n  const [todoIdsForLoader, setTodoIdsForLoader] = useState<number[]>([]);\n\n  const loadTodos = useCallback(async () => {\n    if (user) {\n      try {\n        setError(Errors.NONE);\n        const todos = await getTodos(user.id);\n\n        setTodosFromServer(todos);\n      } catch {\n        setError(Errors.LOAD);\n      }\n    }\n  }, [user]);\n\n  const createTodo = useCallback(\n    async (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n\n      if (user && newTodoTitle.trim().length) {\n        try {\n          setIsAdding(true);\n          await postTodo(user.id, newTodoTitle);\n\n          await loadTodos();\n        } catch {\n          setError(Errors.ADD);\n        } finally {\n          setIsAdding(false);\n          setNewTodoTitle('');\n        }\n      } else {\n        setError(Errors.ADD);\n      }\n    }, [user, newTodoTitle],\n  );\n\n  const toggleAllTodos = useCallback(async () => {\n    try {\n      const activeTodosIds = todosFromServer\n        .filter(todo => !todo.completed)\n        .map(todo => todo.id);\n\n      if (activeTodosIds.length) {\n        setTodoIdsForLoader(activeTodosIds);\n\n        await Promise.all(activeTodosIds\n          .map(id => patchTodo(id, { completed: true })));\n\n        await loadTodos();\n      } else {\n        const todosIds = todosFromServer.map(todo => todo.id);\n\n        setTodoIdsForLoader(todosIds);\n\n        await Promise.all(todosFromServer\n          .map(todo => patchTodo(todo.id, { completed: false })));\n\n        await loadTodos();\n      }\n    } catch {\n      setError(Errors.UPDATE);\n    } finally {\n      setTodoIdsForLoader([]);\n    }\n  }, [todosFromServer]);\n\n  const clearCompletedTodos = useCallback(async () => {\n    try {\n      const completedTodosIds = todosFromServer\n        .filter(todo => todo.completed)\n        .map(todo => todo.id);\n\n      setTodoIdsForLoader(completedTodosIds);\n\n      await Promise.all(completedTodosIds.map(id => deleteTodo(id)));\n\n      await loadTodos();\n    } catch {\n      setError(Errors.DELETE_COMPLETED);\n    } finally {\n      setTodoIdsForLoader([]);\n    }\n  }, [todosFromServer]);\n\n  const removeTodo = useCallback(async (todoId: number) => {\n    try {\n      setTodoIdsForLoader([todoId]);\n      await deleteTodo(todoId);\n\n      await loadTodos();\n    } catch {\n      setError(Errors.DELETE);\n    } finally {\n      setTodoIdsForLoader([]);\n    }\n  }, [todosFromServer]);\n\n  const toggleTodo = useCallback(async (todo: Todo) => {\n    try {\n      setTodoIdsForLoader([todo.id]);\n      await patchTodo(todo.id, { completed: !todo.completed });\n\n      await loadTodos();\n    } catch {\n      setError(Errors.UPDATE);\n    } finally {\n      setTodoIdsForLoader([]);\n    }\n  }, [todosFromServer]);\n\n  const updateTodoTitle = useCallback(async (todoTitle: string, todo: Todo) => {\n    try {\n      setTodoIdsForLoader([todo.id]);\n\n      await patchTodo(todo.id, { title: todoTitle });\n\n      await loadTodos();\n    } catch {\n      setError(Errors.UPDATE);\n    } finally {\n      setTodoIdsForLoader([]);\n    }\n  }, [todosFromServer]);\n\n  return ({\n    error,\n    setError,\n    todosFromServer,\n    newTodoTitle,\n    setNewTodoTitle,\n    isAdding,\n    todoIdsForLoader,\n    loadTodos,\n    createTodo,\n    toggleAllTodos,\n    clearCompletedTodos,\n    toggleTodo,\n    updateTodoTitle,\n    removeTodo,\n  });\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"todoapp__title\">Page not found</h1>\n);\n","import { Routes, Route, useLocation } from 'react-router-dom';\n\nimport { TodoApp } from './components/TodoApp/TodoApp';\nimport { AuthProvider } from './components/Auth/AuthContext';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nexport const App = () => {\n  const location = useLocation().pathname;\n  const checkStatus = location === '/active' || location === '/completed';\n\n  return (\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<TodoApp />} />\n        {checkStatus && <Route path=\":status\" element={<TodoApp />} />}\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </AuthProvider>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\nconst Root = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}